services:
  client:
    restart: unless-stopped
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - vol-client:/usr/src/app
    networks:
      - mynetwork

  server:
    image: server
    restart: unless-stopped
    env_file:
      - .env
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      DB_HOST: mysql
      DB_USER: myuser
      DB_PASSWORD: mypassword
      DB_NAME: mydb
      DB_PORT: 3306
      SESS_SECRET: ${SESS_SECRET}
      APP_PORT: ${APP_PORT}
    stdin_open: true
    tty: true
    volumes:
      - vol-server:/usr/src/app
    command: /usr/local/bin/wait-for-it.sh mysql:3306 -- npm start
    depends_on:
      - mysql
    networks:
      - mynetwork

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf  
      - ./client/build:/usr/share/nginx/html  
    depends_on:
      - client
    networks:
      - mynetwork

  mysql:
    image: mysql:latest
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: myrootpassword
      MYSQL_DATABASE: mydb
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - mynetwork

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: myrootpassword
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - mynetwork

volumes:
  vol-client:
  vol-server:
  db_data:

networks:
  mynetwork: